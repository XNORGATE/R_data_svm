load("C:/Users/Dean/Desktop/CLanguage/大數據專題/big/iris-svm.RData")
dev.off()
load("C:/Users/Dean/Desktop/CLanguage/大數據專題/big/iris-svm.RData")
save(data, file = "my.file.RData")
data <- read.csv("anime.csv")
data <- read.csv("anime.csv")
data <- read.csv("C:\Users\Dean\Desktop\CLanguage\大數據專題\anime.csv")
data <- read.csv("C:\\Users\Dean\Desktop\CLanguage\大數據專題\anime.csv")
data <- read.csv("C:/Users/Dean/Desktop/CLanguage/大數據專題/anime.csv")
save(data, file = "C:/Users/Dean/Desktop/CLanguage/大數據專題/anime.RData")
load("C:\Users\Dean\Desktop\CLanguage\大數據專題\big\iris-svm.RData", ex <- new.env())
load("C:\\Users\Dean\Desktop\CLanguage\大數據專題\big\iris-svm.RData", ex <- new.env())
load("C:\\Users\\Dean\\Desktop\\CLanguage\\大數據專題\\big\\iris-svm.RData", ex <- new.env())
ls.str(ex)
load("C:\\Users\\Dean\\Desktop\\CLanguage\\大數據專題\\big\\iris-svm.RData", ex <- new.env())
ls.str(ex)
load("C:\\Users\\Dean\\Desktop\\CLanguage\\大數據專題\\big\\iris-svm.RData")
ls() #returns a list of all the objects you just loaded (and anything else in your environment)
write.csv(theItemOfInterestFromYourDRadataFileAsThereMayBeMoreThanOneThingInthere,
file="yourCSV.csv")
load("C:\\Users\\Dean\\Desktop\\CLanguage\\大數據專題\\big\\iris-svm.RData", ex <- new.env())
ls() #returns a list of all the objects you just loaded (and anything else in your environment)
write.csv(ex,
file="yourCSV.csv")
resave <- function(file){
e <- new.env(parent = emptyenv())
load(file, envir = e)
objs <- ls(envir = e, all.names = TRUE)
for(obj in objs) {
.x <- get(obj, envir =e)
message(sprintf('Saving %s as %s.csv', obj,obj) )
write.csv(.x, file = paste0(obj, '.csv'))
}
}
resave('iris-svm.RData')
load("C:/Users/Dean/Desktop/CLanguage/big_data/final_project/anime.RData")
Sepal.W= "(2009-2010)"
# args = commandArgs(TRUE)
# Sepal.L = as.numeric(args[1])
# Sepal.W = as.numeric(args[2])
# Petal.L = as.numeric(args[3])
# Petal.W = as.numeric(args[4])
Sepal.L = "Fullmetal Alchemist: Brotherhood"
Sepal.W= "(2009-2010)"
Petal.L = "24 min"
Petal.W= "Animation, Action, Adventure"
# library("httr",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("curl",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("rjson",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
#library("httr",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("curl",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("rjson",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
library("randomForest",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("anime.RData", .GlobalEnv)
load("C:/Users/Dean/Desktop/CLanguage/big_data/final_project/anime.RData")
library("randomForest",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
# args = commandArgs(TRUE)
# Sepal.L = as.numeric(args[1])
# Sepal.W = as.numeric(args[2])
# Petal.L = as.numeric(args[3])
# Petal.W = as.numeric(args[4])
Sepal.L = "Fullmetal Alchemist: Brotherhood"
Sepal.W= "(2009-2010)"
Petal.L = "24 min"
Petal.W= "Animation, Action, Adventure"
# library("httr",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("curl",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("rjson",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
#library("httr",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("curl",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("rjson",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
library("randomForest",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("anime.RData", .GlobalEnv)
data <- read.csv("housing_price_dataset.csv")
# # save(svm.model,file="C:\\Users\\Dean\\Desktop\\CLanguage\\big_data\\big\\anime.RData")
data <- read.csv("housing_price_dataset.csv")
# # save(svm.model,file="C:\\Users\\Dean\\Desktop\\CLanguage\\big_data\\big\\anime.RData")
data <- read.csv("C:\Users\Dean\Desktop\CLanguage\big_data\final_project\housing_price_dataset.csv")
# # save(svm.model,file="C:\\Users\\Dean\\Desktop\\CLanguage\\big_data\\big\\anime.RData")
data <- read.csv("C:\\Users\\Dean\\Desktop\\CLanguage\\big_data\\final_project\\housing_price_dataset.csv")
# rm(list = ls())
# gc()
# # #install.packages("randomForest")
# library(randomForest)
# data(iris)
# ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.8, 0.2))
# trainData <- iris[ind==1,]
# trainData <- iris[ind==1,]
# rf <- randomForest(Species ~ ., data=trainData, ntree=100)
# irisPred = predict(rf, newdata=testData)
# table(irisPred, testData$Species)
# # #install.packages("e1071")
# # library(e1071)
# # data(iris)
# # test.index = sample(1:nrow(iris),15)
# # test.data = iris[test.index,]
# # train.data = iris[-test.index,]
# # tuned <- tune.svm(Species ~., data = train.data, gamma = 10^(-3:-1), cost = 10^(-1:1))
# # summary(tuned)
# # svm.model <- svm(Species ~ ., data = train.data, type='C-classification', cost = 1, gamma = 0.1)
# # summary(svm.model)
# # svm.pred <- predict(svm.model, test.data[,-5])
# # (table.svm.test=table(pred = svm.pred, true = test.data[,5]))
# # correct.svm <- sum(diag(table.svm.test))/sum(table.svm.test)
# # (correct.svm<-correct.svm*100)
# # save(svm.model,file="C:\\Users\\Dean\\Desktop\\CLanguage\\big_data\\big\\anime.RData")
data <- read.csv("C:\\Users\\Dean\\Desktop\\CLanguage\\big_data\\final_project\\housing_price_dataset.csv")
save(data, file = "price.RData")
load("C:/Users/Dean/Desktop/CLanguage/big_data/final_project/price.RData")
# args = commandArgs(TRUE)
# Sepal.L = as.numeric(args[1])
# Sepal.W = as.numeric(args[2])
# Petal.L = as.numeric(args[3])
# Petal.W = as.numeric(args[4])
Sepal.L = 5.9
Sepal.W= 3.0
Petal.L = 5.1
Petal.W= 1.8
# library("httr",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("curl",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("rjson",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
#library("httr",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("curl",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("rjson",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("anime.RData", .GlobalEnv)
flower <-data.frame(Sepal.Length=Sepal.L,Sepal.Width=Sepal.W,Petal.Length=Petal.L,Petal.Width=Petal.W,Species=NA)
svm.pred <- predict(svm.model, flower[,-5])
# args = commandArgs(TRUE)
# Sepal.L = as.numeric(args[1])
# Sepal.W = as.numeric(args[2])
# Petal.L = as.numeric(args[3])
# Petal.W = as.numeric(args[4])
Sepal.L = 5.9
Sepal.W= 3.0
Petal.L = 5.1
Petal.W= 1.8
# library("httr",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("curl",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("rjson",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
#library("httr",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("curl",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("rjson",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("anime.RData", .GlobalEnv)
flower <-data.frame(Sepal.Length=Sepal.L,Sepal.Width=Sepal.W,Petal.Length=Petal.L,Petal.Width=Petal.W,Species=NA)
svm.pred <- predict(svm.model, flower[,-5])
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("iris-svm.RData", .GlobalEnv)
# args = commandArgs(TRUE)
# Sepal.L = as.numeric(args[1])
# Sepal.W = as.numeric(args[2])
# Petal.L = as.numeric(args[3])
# Petal.W = as.numeric(args[4])
Sepal.L = 5.9
Sepal.W= 3.0
Petal.L = 5.1
Petal.W= 1.8
# library("httr",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("curl",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("rjson",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
#library("httr",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("curl",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("rjson",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("iris-svm.RData", .GlobalEnv)
flower <-data.frame(Sepal.Length=Sepal.L,Sepal.Width=Sepal.W,Petal.Length=Petal.L,Petal.Width=Petal.W,Species=NA)
svm.pred <- predict(svm.model, flower[,-5])
ans <- as.vector(svm.pred)
print(ans)
print(Sepal.L)
print(Sepal.W)
print(Petal.L)
print(Petal.W)
dev.off()
# args = commandArgs(TRUE)
# Sepal.L = as.numeric(args[1])
# Sepal.W = as.numeric(args[2])
# Petal.L = as.numeric(args[3])
# Petal.W = as.numeric(args[4])
Sepal.L = 5.9
Sepal.W= 3.0
Petal.L = 5.1
Petal.W= 1.8
# library("httr",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("curl",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("rjson",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
#library("httr",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("curl",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("rjson",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("iris-svm.RData", .GlobalEnv)
flower <-data.frame(Sepal.Length=Sepal.L,Sepal.Width=Sepal.W,Petal.Length=Petal.L,Petal.Width=Petal.W,Species=NA)
svm.pred <- predict(svm.model, flower[,-5])
ans <- as.vector(svm.pred)
print(ans)
print(Sepal.L)
print(Sepal.W)
print(Petal.L)
print(Petal.W)
dev.off()
# args = commandArgs(TRUE)
# Sepal.L = as.numeric(args[1])
# Sepal.W = as.numeric(args[2])
# Petal.L = as.numeric(args[3])
# Petal.W = as.numeric(args[4])
Sepal.L = 5.9
Sepal.W= 3.0
Petal.L = 5.1
Petal.W= 1.8
# library("httr",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("curl",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("rjson",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
#library("httr",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("curl",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("rjson",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("anime.RData", .GlobalEnv)
flower <-data.frame(Sepal.Length=Sepal.L,Sepal.Width=Sepal.W,Petal.Length=Petal.L,Petal.Width=Petal.W,Species=NA)
svm.pred <- predict(svm.model, flower[,-5])
ans <- as.vector(svm.pred)
print(ans)
print(Sepal.L)
print(Sepal.W)
print(Petal.L)
print(Petal.W)
dev.off()
# args = commandArgs(TRUE)
# Sepal.L = as.numeric(args[1])
# Sepal.W = as.numeric(args[2])
# Petal.L = as.numeric(args[3])
# Petal.W = as.numeric(args[4])
Sepal.L = 5.9
Sepal.W= 3.0
Petal.L = 5.1
Petal.W= 1.8
# library("httr",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("curl",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("rjson",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
#library("httr",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("curl",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("rjson",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("anime.RData", .GlobalEnv)
flower <-data.frame(Sepal.Length=Sepal.L,Sepal.Width=Sepal.W,Petal.Length=Petal.L,Petal.Width=Petal.W,Species=NA)
svm.pred <- predict(svm.model, flower[,-5])
ans <- as.vector(svm.pred)
print(ans)
print(Sepal.L)
print(Sepal.W)
print(Petal.L)
print(Petal.W)
dev.off()
# args = commandArgs(TRUE)
# Sepal.L = as.numeric(args[1])
# Sepal.W = as.numeric(args[2])
# Petal.L = as.numeric(args[3])
# Petal.W = as.numeric(args[4])
Sepal.L = 5.9
Sepal.W= 3.0
Petal.L = 5.1
Petal.W= 1.8
# library("httr",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("curl",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("rjson",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
#library("httr",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("curl",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("rjson",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("anime.RData", .GlobalEnv)
flower <-data.frame(Sepal.Length=Sepal.L,Sepal.Width=Sepal.W,Petal.Length=Petal.L,Petal.Width=Petal.W,Species=NA)
svm.pred <- predict(svm.model, flower[,-5])
ans <- as.vector(svm.pred)
print(ans)
print(Sepal.L)
print(Sepal.W)
print(Petal.L)
print(Petal.W)
dev.off()
# args = commandArgs(TRUE)
# Sepal.L = as.numeric(args[1])
# Sepal.W = as.numeric(args[2])
# Petal.L = as.numeric(args[3])
# Petal.W = as.numeric(args[4])
Sepal.L = 5.9
Sepal.W= 3.0
Petal.L = 5.1
Petal.W= 1.8
# library("httr",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("curl",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("rjson",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
#library("httr",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("curl",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("rjson",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("anime.RData", .GlobalEnv)
flower <-data.frame(Sepal.Length=Sepal.L,Sepal.Width=Sepal.W,Petal.Length=Petal.L,Petal.Width=Petal.W,Species=NA)
svm.pred <- predict(svm.model, flower[,-5])
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
# args = commandArgs(TRUE)
# Sepal.L = as.numeric(args[1])
# Sepal.W = as.numeric(args[2])
# Petal.L = as.numeric(args[3])
# Petal.W = as.numeric(args[4])
Sepal.L = 5.9
Sepal.W= 3.0
Petal.L = 5.1
Petal.W= 1.8
# library("httr",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("curl",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("rjson",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
#library("httr",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("curl",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("rjson",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("iris-svm.RData", .GlobalEnv)
flower <-data.frame(Sepal.Length=Sepal.L,Sepal.Width=Sepal.W,Petal.Length=Petal.L,Petal.Width=Petal.W,Species=NA)
svm.pred <- predict(svm.model, flower[,-5])
ans <- as.vector(svm.pred)
print(ans)
print(Sepal.L)
print(Sepal.W)
print(Petal.L)
print(Petal.W)
dev.off()
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("anime.RData", .GlobalEnv)
# args = commandArgs(TRUE)
# Sepal.L = as.numeric(args[1])
# Sepal.W = as.numeric(args[2])
# Petal.L = as.numeric(args[3])
# Petal.W = as.numeric(args[4])
Sepal.L = 5.9
Sepal.W= 3.0
Petal.L = 5.1
Petal.W= 1.8
# library("httr",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("curl",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("rjson",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
#library("httr",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("curl",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("rjson",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("anime.RData", .GlobalEnv)
flower <-data.frame(Sepal.Length=Sepal.L,Sepal.Width=Sepal.W,Petal.Length=Petal.L,Petal.Width=Petal.W,Species=NA)
svm.pred <- predict(svm.model, flower[,-5])
ans <- as.vector(svm.pred)
print(ans)
print(Sepal.L)
print(Sepal.W)
print(Petal.L)
print(Petal.W)
dev.off()
# #install.packages("e1071")
# library(e1071)
# data(iris)
# test.index = sample(1:nrow(iris),15)
# test.data = iris[test.index,]
# train.data = iris[-test.index,]
# tuned <- tune.svm(Species ~., data = train.data, gamma = 10^(-3:-1), cost = 10^(-1:1))
# summary(tuned)
# svm.model <- svm(Species ~ ., data = train.data, type='C-classification', cost = 1, gamma = 0.1)
# summary(svm.model)
# svm.pred <- predict(svm.model, test.data[,-5])
# (table.svm.test=table(pred = svm.pred, true = test.data[,5]))
# correct.svm <- sum(diag(table.svm.test))/sum(table.svm.test)
# (correct.svm<-correct.svm*100)
# save(svm.model,file="C:\\Users\\Dean\\Desktop\\CLanguage\\big_data\\big\\anime.RData")
# #install.packages("e1071")
# library(e1071)
# data(iris)
# test.index = sample(1:nrow(iris),15)
# test.data = iris[test.index,]
# train.data = iris[-test.index,]
# tuned <- tune.svm(Species ~., data = train.data, gamma = 10^(-3:-1), cost = 10^(-1:1))
# summary(tuned)
# svm.model <- svm(Species ~ ., data = train.data, type='C-classification', cost = 1, gamma = 0.1)
# summary(svm.model)
# svm.pred <- predict(svm.model, test.data[,-5])
# (table.svm.test=table(pred = svm.pred, true = test.data[,5]))
# correct.svm <- sum(diag(table.svm.test))/sum(table.svm.test)
# (correct.svm<-correct.svm*100)
# save(svm.model,file="C:\\Users\\Dean\\Desktop\\CLanguage\\big_data\\big\\anime.RData")
# args = commandArgs(TRUE)
# Sepal.L = as.numeric(args[1])
# Sepal.W = as.numeric(args[2])
# Petal.L = as.numeric(args[3])
# Petal.W = as.numeric(args[4])
Sepal.L = 5.9
Sepal.W= 3.0
Petal.L = 5.1
Petal.W= 1.8
# library("httr",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("curl",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("rjson",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
#library("httr",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("curl",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("rjson",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("iris-svm.RData", .GlobalEnv)
flower <-data.frame(Sepal.Length=Sepal.L,Sepal.Width=Sepal.W,Petal.Length=Petal.L,Petal.Width=Petal.W,Species=NA)
svm.pred <- predict(svm.model, flower[,-5])
ans <- as.vector(svm.pred)
print(ans)
print(Sepal.L)
print(Sepal.W)
print(Petal.L)
print(Petal.W)
dev.off()
# args = commandArgs(TRUE)
# Sepal.L = as.numeric(args[1])
# Sepal.W = as.numeric(args[2])
# Petal.L = as.numeric(args[3])
# Petal.W = as.numeric(args[4])
Sepal.L = 5.9
Sepal.W= 3.0
Petal.L = 5.1
Petal.W= 1.8
# library("httr",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("curl",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
# library("rjson",lib.loc= "C:/Users/user/AppData/Local/R/win-library/4.2")
#library("httr",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("curl",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
#library("rjson",lib.loc= "C:/Users/q/AppData/Local/R/win-library/4.2")
library("e1071",lib.loc= "C:/Users/Dean/AppData/Local/R/win-library/4.3")
load("price.RData", .GlobalEnv)
flower <-data.frame(Sepal.Length=Sepal.L,Sepal.Width=Sepal.W,Petal.Length=Petal.L,Petal.Width=Petal.W,Species=NA)
svm.pred <- predict(svm.model, flower[,-5])
#install.packages("e1071")
library(e1071)
data(script)
test.index = sample(1:nrow(script),15)
